<?xml version="1.0"?>
<!--
    Launch RTK Localization using Ublox F9P reciever and SWEPOS Network-RTK Service
-->

<launch>
    <!-- RTK RECEIVER ARGUMENTS -->
    <arg name="gps_device"          default="/dev/ttyACM0"/> 
    <!-- dev/ttyS0 if connected via UART -->
    <arg name="baud"            default="115200" />
    <!-- 38400 if connected via UART -->
    <arg name="gps_frame"       default="gps"/>
    <arg name="dynamic_model"   default="portable"/> <!-- Allowed values are "portable", "stationary", "pedestrian","automotive","sea","airborne_1g","airborne_2g", "airborne_4g","wrist_watch", and "bike" -->
    <arg name="ns"              default="gps"/>

    <!-- NTRIP CLIENT ARGUMENTS -->
    <!-- for swepos network rtk -->
    <arg name="host"            default="nrtk-swepos.lm.se"/>
    <arg name="port"            default="80"/>  <!-- PORT 8500 is also valid -->
    <arg name="authenticate"    default="true"/>
    <arg name="mountpoint"      default="MSM_GNSS"/>
    <!-- for rtk2go -->
    <arg name="username"        default="ITRL03"/>
    <arg name="password"        default="171488"/>
    <!-- <arg name="username"        default="707886204"/> -->
    <!-- <arg name="password"        default="115544"/> -->
    <!-- <arg name="username"        default="708583036"/> -->
    <!-- <arg name="password"        default="151515"/> -->
    
    <arg name="rtcm_message_package"           default="rtcm_msgs" />

    <group ns="$(arg ns)">
        <!-- START UBLOX ZED-F9P RTK MANAGER NODE -->
        <node pkg="svea_sensors" type="rtk_manager.py" name="rtk_manager" output="screen" ns="gps">
            <param name="device"        value="$(arg gps_device)"/>
            <param name="baud"          value="$(arg baud)" />
            <param name="gps_frame"     value="$(arg gps_frame)" />
            <param name="dynamic_model" value="$(arg dynamic_model)"/>
            <remap from="rtcm"         to="$(arg ns)/rtcm"/>
            <remap from="nmea"         to="$(arg ns)/nmea"/>

        </node>

        <!-- START NTRIP CLIENT -->
        <node name="ntrip_client" pkg="ntrip_client" type="ntrip_ros.py" output="screen">
            <param name="host"                           value="$(arg host)" />
            <param name="port"                           value="$(arg port)" />
            <param name="mountpoint"                     value="$(arg mountpoint)" />
            <param name="authenticate"                   value="$(arg authenticate)" />
            <param name="username"                       value="$(arg username)" />
            <param name="password"                       value="$(arg password)" />
            <param name="ssl"                            value="false" />
            <param name="rtcm_frame_id"                  value="odom" />

            <!-- Optional parameters that will allow for longer or shorter NMEA messages. Standard max length for NMEA is 82 -->
            <param name="nmea_max_length"                value="82" />
            <param name="nmea_min_length"                value="3" />

            <!-- Use this parameter to change the type of RTCM message published by the node. -->
            <param name="rtcm_message_package"           value="$(arg rtcm_message_package)" />

            <!-- Will affect how many times the node will attempt to reconnect before exiting, and how long it will wait in between attempts when a reconnect occurs -->
            <param name="reconnect_attempt_max"          value="10" />
            <param name="reconnect_attempt_wait_seconds" value="5" />

            <!-- How many seconds is acceptable in between receiving RTCM. If RTCM is not received for this duration, the node will attempt to reconnect -->
            <param name="rtcm_timeout_seconds"           value="4" />
            <remap from="/ntrip_client/nmea" to="$(arg ns)/nmea"/>
            <remap from="/ntrip_client/rtcm" to="$(arg ns)/rtcm"/>
        </node>
    </group>

</launch>
